package com.bamboo.ebooks.headfirst_design.ch05_singleton;

/**
 * Created by bamboo on 2017/2/19.
 */
public class Usage_00_StaticVarForBadSingleton {

    /**
     * 单例模式确保一个类只有一个实例，并提供一个全局访问点。
     *
     * 有一些对象我们只需要一个，比方说：线程池、缓存、对话框、处理器偏好设置和注册表的对象等等。
     * 事实上，这类对象只能有一个实例，如果制造出多个实例，就会导致许多问题产生，
     * 例如：程序的行为异常、资源使用过量，或者是不一致的结果。
     *
     * 【使用静态变量】
     *      如何确保这些类只存在一个实例？利用java的静态变量可以做到，
     *      但使用静态变量有个缺点：如果将对象赋值给一个全局变量，那么你必须在程序一开始就创建好对象。
     *      万一这个对象非常耗费资源，而程序在这次的执行过程中又一直没用到它，就形成了浪费。
     */

}
